<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Modules extends CI_Controller { 	public function __construct()    {		parent::__construct();		$this->load->model('c3model');		date_default_timezone_set('UTC');    }		function itemsAge()	{	 //SELECT ARCHIVE PERIOD	 $age=0; $curDate= date('Y-m-d');	 $sql = $this->db->query("SELECT defaultRange, defaultDate FROM archive_filtering WHERE id=1 LIMIT 0,1");	 $sql = $sql->row();	 $list_of_items="";	 if($sql->defaultRange==1){	  $sql = $this->db->query("SELECT (tyear*365) as DaysInYear, (tmonth*30) as DaysInMonth FROM archive_filtering WHERE id=1");	  $sql = $sql->row();	  $age = $sql->DaysInYear + $sql->DaysInMonth;	  //SELECT ALL ITEMS FOR PURGING	  $list_of_items = " $age";	 }     return $list_of_items;	}		function generateItemsForArchive()	{	 //SELECT ARCHIVE PERIOD	 $age=0; $curDate= date('Y-m-d');	 $sql = $this->db->query("SELECT defaultRange, defaultDate FROM archive_filtering WHERE id=1 LIMIT 0,1");	 $sql = $sql->row();	 $list_of_items="";	 if($sql->defaultRange==1){	  $sql = $this->db->query("SELECT (tyear*365) as DaysInYear, (tmonth*30) as DaysInMonth FROM archive_filtering WHERE id=1");	  $sql = $sql->row();	  $age = $sql->DaysInYear + $sql->DaysInMonth;	  //SELECT ALL ITEMS FOR PURGING	  $sql = $this->db->query("SELECT id, itemCode, DATEDIFF('$curDate',items.dateReleased) AS itemAge FROM items WHERE publish='y'  							   AND (items.id NOT IN (SELECT itemID FROM iLikeResultRef)) 							   AND (items.brandID NOT IN (SELECT brandID FROM commonGalleryBrands))							   AND items.purge='n' AND DATEDIFF('$curDate',items.dateReleased)>= $age OR archive='y'							   ");      $sql = $sql->result_array();	  //SAVE ALL OLD ITEM	  foreach($sql as $s)	  { extract($s);		$list_of_items .= $id.",";	  }	 }else{	  $sql 		= $this->db->query("SELECT dateFrom, dateTo FROM archive_filtering WHERE id=1");	  $sql 		= $sql->row();	  $dateFrom = $sql->dateFrom;	  $dateTo   = $sql->dateTo;	  //SELECT ALL ITEMS FOR PURGING	  $sql = $this->db->query("SELECT id, itemCode, dateReleased FROM items WHERE publish='y' AND popular='n' AND items.purge='n' 							   AND (items.id NOT IN (SELECT itemID FROM iLikeResultRef))							   AND (items.brandID NOT IN (SELECT brandID FROM commonGalleryBrands))							   AND (dateReleased BETWEEN '$dateFrom' AND '$dateTo') OR archive='y'");      $sql = $sql->result_array();	  //SAVE ALL OLD ITEM	  foreach($sql as $s)	  { extract($s);		$list_of_items .= $id.",";	  }	 }	 if($list_of_items=="") $list_of_items='0,';     return substr($list_of_items,0,-1);	}		function generateItemsForiLike()	{	 //SELECT ARCHIVE PERIOD	 $age=0; $curDate= date('Y-m-d');	 $sql = $this->db->query("SELECT defaultRange, defaultDate FROM archive_filtering WHERE id=1 LIMIT 0,1");	 $sql = $sql->row();	 $list_of_items="";	 if($sql->defaultRange==1){	  $sql = $this->db->query("SELECT (tyear*365) as DaysInYear, (tmonth*30) as DaysInMonth FROM archive_filtering WHERE id=1");	  $sql = $sql->row();	  $age = $sql->DaysInYear + $sql->DaysInMonth;	  //SELECT ALL ITEMS FOR PURGING	  $sql = $this->db->query("SELECT id, itemCode, DATEDIFF('$curDate',items.dateReleased) AS itemAge FROM items WHERE publish='y' 							   AND (items.id NOT IN (SELECT itemID FROM iLikeResultRef)) 							   AND (items.brandID NOT IN (SELECT brandID FROM commonGalleryBrands))							   AND items.purge='n' AND DATEDIFF('$curDate',items.dateReleased)>= $age OR archive='y'							   ");      $sql = $sql->result_array();	  //SAVE ALL OLD ITEM	  foreach($sql as $s)	  { extract($s);		$list_of_items .= $id.",";	  }	 }else{	  $sql 		= $this->db->query("SELECT dateFrom, dateTo FROM archive_filtering WHERE id=1");	  $sql 		= $sql->row();	  $dateFrom = $sql->dateFrom;	  $dateTo   = $sql->dateTo;	  //SELECT ALL ITEMS FOR PURGING	  $sql = $this->db->query("SELECT id, itemCode, dateReleased FROM items WHERE publish='y' AND items.purge='n' 							   AND (items.id NOT IN (SELECT itemID FROM iLikeResultRef))							   AND (items.brandID NOT IN (SELECT brandID FROM commonGalleryBrands))							   AND (dateReleased BETWEEN '$dateFrom' AND '$dateTo') OR archive='y'");      $sql = $sql->result_array();	  //SAVE ALL OLD ITEM	  foreach($sql as $s)	  { extract($s);		$list_of_items .= $id.",";	  }	 }	 if($list_of_items=="") $list_of_items='0,';     return substr($list_of_items,0,-1);	}		function common_gallery_item($id)	{		$sql = $this->db->query("SELECT brandID FROM items WHERE id='$id'");		$row = $sql->row();				//SLECT ALL COMMON GALLERY BRANDS		$sql = $this->db->query("SELECT brandID FROM commonGalleryBrands");		$brands = $sql->result_array();				$exist=FALSE;		foreach($brands as $b)		{ extract($b);		  if($row->brandID==$brandID)			$exist=TRUE;		}		return $exist;	}		function item_views($tbl_item,$views_table,$itemID)	{		$dbFields['itemID']   = $itemID;		$dbFields['user_id']  = $_SESSION['user_id'];				//SEARCH IF PUBLISH		$sql = $this->db->query("SELECT id, user_id FROM $tbl_item WHERE id = $itemID AND publish='y' LIMIT 0,1");		$row = $sql->row();		$user_id = $row->user_id;		//print_r($row);				if($views_table=='item_views' AND $row!=NULL AND $user_id != $_SESSION['user_id'])			$res = $this->c3model->c3crud("insert","item_views",$dbFields,'');		elseif($views_table=='ecitem_views' AND $row!=NULL AND $user_id != $_SESSION['user_id'])				$res = $this->c3model->c3crud("insert","ecitem_views",$dbFields,'');		elseif($views_table=='myGallery_views' AND $row!=NULL AND $user_id != $_SESSION['user_id'])				$res = $this->c3model->c3crud("insert","myGallery_views",$dbFields,'');		elseif($views_table=='commonGallery_views' AND $row!=NULL AND $user_id != $_SESSION['user_id'])				$res = $this->c3model->c3crud("insert","commonGallery_views",$dbFields,'');		}		function attr($tables,$id)	{		$x = 0;				foreach($tables as $t)		{			extract($t);			 $sql    = "SELECT * FROM $tbl WHERE $fld = $id";			 $rows   = $this->db->query($sql);			 $result = $rows->result_array();						 if($result)				$x++;		}					return $x;	}		function user_manual($id)	{		$sql = "SELECT * FROM user_manual WHERE id=$id LIMIT 0,1";		$sql = $this->db->query($sql);		$row = $sql->row();				if(isset($row->user_manual))			return $row->user_manual;		else 			return "default.pdf";	}		function access_checker()	{		//DETECT IF  USER IS LOGIN				$ses   = $_SESSION;	   $login = isset($ses['admin_login'])?$ses['admin_login']:false;	    		if($login == true){			return  true;		}else{			header('location: '.HTTP_PATH.'login');			die();		}		}  		function session_handler()	{			$_SESSION['LAST_ACTIVITY'] = time(); 		if(!isset($_SESSION['admin_login']) == TRUE)		{			header('location: '.HTTP_PATH.'login');			die();		}				//DELETE ALL INACTIVE SESSION		$sql = "SELECT user_id, timestamp FROM active_session";		$query = $this->db->query($sql);		$active_sessions = $query->result_array();				if($active_sessions){			foreach($active_sessions as $a)			{				extract($a);					if((time() - $_SESSION['LAST_ACTIVITY']) >= ini_get('session.gc_maxlifetime'))				{					$this->db->query("DELETE FROM active_session WHERE user_id = $user_id");				}			}		}						if (isset($_SESSION['LAST_ACTIVITY']) && ((time() - $_SESSION['LAST_ACTIVITY']) >= ini_get('session.gc_maxlifetime'))) {		//clear record in database		$this->db->query("DELETE FROM active_session WHERE session_id='".session_id()."'");				// last request was more than 30 minutes ago		session_unset();     		// unset $_SESSION variable for the run-time 		session_destroy();   		// destroy session data in storage		}else{			// update last activity time stamp			$_SESSION['LAST_ACTIVITY'] = time(); 			$this->db->query("UPDATE active_session SET last_activity='". date('H:i:s') ."', timestamp='". time() ."'   WHERE session_id = '".session_id() ."'");		}					}		function BU_Logistics()	{		$sql 		 = "SELECT id FROM admin_usersRoles WHERE roleID = 55 AND admin_userID = ".$_SESSION['user_id'] ." LIMIT 0,1";		$query 		 = $this->db->query($sql);		$permission  = $query->result_array();				if($permission)			return TRUE;		else			return FALSE;	}		function module_checker($moduleID,$functionName)	{		$allowed="";		if(!$_SESSION['admin_login'] == TRUE)		{			header('location: '.HTTP_PATH.'login');			die();		}				$super_admin = $_SESSION['super_admin'];		$admin_userID = $_SESSION['user_id'];				if($super_admin=='y')		{					}		else		{			//PERMISSIONS			$sql = "SELECT * FROM roles_userProfilesRef					LEFT JOIN system_mod 					ON roles_userProfilesRef.systemModID = system_mod.id					WHERE roleID 					IN (SELECT roleID FROM admin_usersRoles WHERE admin_userID = $admin_userID) 					ORDER BY modname ASC";			$query = $this->db->query($sql);			$permissions = $query->result_array();									//CHECK PERMISSION			$allowed = false;			foreach($permissions as $p)			{				extract($p);					if($moduleID == $systemModID && $functionName == $function)				{					//echo "moduleID: ".$moduleID;					//echo "systemModID: ".$systemModID; 					//echo "functionName: ".$functionName; 					//echo  "function: ".$function;					$allowed = true;				}			}									//ALLOWED						if($allowed==false)			{			   header("location: ".HTTP_PATH."access_denied_page");  			   die();			}					}				return $allowed;			}			function module_checker2($moduleID,$functionName)	{		$allowed="";		if(!$_SESSION['admin_login'] == TRUE)		{			header('location: '.HTTP_PATH.'login');			die();		}				$super_admin = $_SESSION['super_admin'];		$admin_userID = $_SESSION['user_id'];				if($super_admin=='y')		{					}		else		{			//PERMISSIONS			$sql = "SELECT * FROM roles_userProfilesRef					LEFT JOIN system_mod 					ON roles_userProfilesRef.systemModID = system_mod.id					WHERE roleID 					IN (SELECT roleID FROM admin_usersRoles WHERE admin_userID = $admin_userID) 					ORDER BY modname ASC";			$query = $this->db->query($sql);			$permissions = $query->result_array();									//CHECK PERMISSION			$allowed = false;			foreach($permissions as $p)			{				extract($p);					if($moduleID == $systemModID && $functionName == $function)				{					//echo "moduleID: ".$moduleID;					//echo "systemModID: ".$systemModID; 					//echo "functionName: ".$functionName; 					//echo  "function: ".$function;					$allowed = true;				}			}					}				return $allowed;			}		function link_checker($moduleID,$functionName)	{		if(!$_SESSION['admin_login'] == TRUE)		{			header('location: '.HTTP_PATH.'login');			die();		}				$super_admin = $_SESSION['super_admin'];		$admin_userID = $_SESSION['user_id'];				if($super_admin=='y')		{			return TRUE;		}		else		{			//PERMISSIONS			$sql = "SELECT * FROM roles_userProfilesRef					LEFT JOIN system_mod 					ON roles_userProfilesRef.systemModID = system_mod.id					WHERE 					roleID IN (SELECT roleID FROM admin_usersRoles WHERE admin_userID = $admin_userID) 					ORDER BY modname ASC";			$query = $this->db->query($sql);			$permissions = $query->result_array();						//print_r($permissions);			//CHECK PERMISSION			$allowed = false;			foreach($permissions as $p)			{				extract($p);					if($moduleID == $systemModID && $functionName == $function)				{					$allowed = true;				}			}									//ALLOWED			if($allowed==true)			{			   return TRUE;			}else			{				return FALSE;			}					}			}			function viewChecker()	{		$sql = $this->db->query("SELECT countViews FROM admin_users WHERE id = ".$_SESSION['user_id']." LIMIT 0,1");		$row = $sql->row();				if($row->countViews=='y')			return TRUE;		else			return FALSE;	}		function crud_checker($moduleID,$functionName)	{		if(!$_SESSION['admin_login'] == TRUE)		{			header('location: '.HTTP_PATH.'login');			die();		}				$super_admin = $_SESSION['super_admin'];		$admin_userID = $_SESSION['user_id'];				if($super_admin=='y')		{			return TRUE;		}		else		{			//PERMISSIONS			$sql = "SELECT * FROM roles_userProfilesRef 					WHERE roleID IN (SELECT roleID FROM admin_usersRoles WHERE admin_userID = $admin_userID)";			$query = $this->db->query($sql);			$permissions = $query->result_array();						//CHECK PERMISSION			$allowed = false;			foreach($permissions as $p)			{				extract($p);					if($moduleID == $systemModID && $functionName == $function)				{					/*echo "moduleID: ".$moduleID;					echo "systemModID: ". $systemModID;					echo "functionName: ".$functionName;					echo "function: ".$function;*/					$allowed = true;				}			}									//ALLOWED			if($allowed==true)			{			   return TRUE;			}else			{				return FALSE;			}					}			}				function itemdb_country()	{		if($_SESSION['super_admin']!='y' AND $_SESSION['countryID']!=0)		{			return "WHERE countryID = ".$_SESSION['countryID']." AND items.publish = 'y'";		}		elseif($_SESSION['super_admin']=='y' OR $_SESSION['countryID']==0){			return " WHERE items.publish = 'y' ";		}	}		function country()	{		if($_SESSION['super_admin']!='y' AND $_SESSION['countryID']!=0)		{			return "WHERE countryID = ".$_SESSION['countryID'];		}		elseif($_SESSION['super_admin']=='y' OR $_SESSION['countryID']==0){			return "";		}	}		function country2()	{		if($_SESSION['super_admin']!='y' AND $_SESSION['countryID']!=0)		{			return "AND countryID = ".$_SESSION['countryID'];		}		elseif($_SESSION['super_admin']=='y' OR $_SESSION['countryID']==0){			return "";		}	}			function eCatalog_country()	{		if($_SESSION['super_admin']!='y')		{			return "WHERE campaign.countryID = ".$_SESSION['countryID'];		}else{			return "";		}	}		function iLike_Campaign_country()	{		if($_SESSION['super_admin']!='y' AND $_SESSION['countryID']!=0)		{			return "AND campaign.countryID = ".$_SESSION['countryID'];		}		elseif($_SESSION['super_admin']=='y' OR $_SESSION['countryID']==0){			return "";		}	}		function iWant_Campaign_country()	{		if($_SESSION['super_admin']!='y' AND $_SESSION['countryID']!=0)		{			return " campaign.countryID = ".$_SESSION['countryID'] ." AND ";		}		elseif($_SESSION['super_admin']=='y' OR $_SESSION['countryID']==0){			return "";		}	}		function votingCampaignFilter($opt=0)	{		if($_SESSION['super_admin']!='y' && $opt == 1)		{			return "WHERE countryID = ".$_SESSION['countryID'] ." AND campaignType = 'iLike'";		}else{			return " AND campaignType = 'iLike'";		}	}		function country_iwant()	{		if($_SESSION['super_admin']!='y' OR $_SESSION['countryID']!=0)		{			return " WHERE countryID = ".$_SESSION['countryID'] ."  ";		}		else{			return "";		}	}	 } ?>